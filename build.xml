<?xml version="1.0" encoding="UTF-8"?>

<project name="phpconf2015" default="build">
	<target name="build-local" depends="prepare,lint,package,phploc,pdepend,phpmd-ci,phpcs-ci,phpcpd,phpdox,phpcb,composer,codeception" />
	<target name="build-develop" depends="prepare,lint,package,deploy-dev,phploc,pdepend,phpmd-ci,phpcs-ci,phpcpd,phpdox,phpcb,composer,codeception" />
	<target name="build-homolog" depends="prepare,lint,package,deploy-homolog,phploc,pdepend,phpmd-ci,phpcs-ci,phpcpd,phpdox,phpcb,composer,codeception-homolog" />
	<target name="build-master" depends="prepare,lint,phpmd-ci,phpcs-ci,phpdox,package,deploy-prod" />



	<target name="build-parallel" depends="prepare,lint,tools-parallel,phpunit,phpcb" />

	<target name="tools-parallel" description="Run tools in parallel">
		<parallel threadCount="2">
			<sequential>
				<antcall target="pdepend" />
				<antcall target="phpmd-ci" />
			</sequential>
			<antcall target="phpcpd" />
			<antcall target="phpcs-ci" />
			<antcall target="phploc" />
			<antcall target="phpdox" />
		</parallel>
	</target>

	<target name="clean" description="Cleanup build artifacts">
		<delete dir="${basedir}/build/api" />
		<delete dir="${basedir}/build/code-browser" />
		<delete dir="${basedir}/build/coverage" />
		<delete dir="${basedir}/build/logs" />
		<delete dir="${basedir}/build/pdepend" />
	</target>

	<target name="prepare" depends="clean" description="Prepare for build">
		<mkdir dir="${basedir}/build/api" />
		<mkdir dir="${basedir}/build/code-browser" />
		<mkdir dir="${basedir}/build/coverage" />
		<mkdir dir="${basedir}/build/logs" />
		<mkdir dir="${basedir}/build/pdepend" />
		<mkdir dir="${basedir}/build/phpdox" />

		<mkdir dir="${basedir}/build/log" />
		<mkdir dir="${basedir}/build/cache" />
		<mkdir dir="${basedir}/build/tmp_certificados" />
		<mkdir dir="${basedir}/build/tmp_spool_swift" />
		<chmod dir="${basedir}/build/log" perm="777" />
		<chmod dir="${basedir}/build/cache" perm="777" />
		<chmod dir="${basedir}/build/tmp_certificados" perm="777" />
		<chmod dir="${basedir}/build/tmp_spool_swift" perm="777" />
	</target>

	<target name="lint" description="Perform syntax check of sourcecode files">
		<apply executable="php" failonerror="true">
			<arg value="-l" />

			<fileset dir="${basedir}">
				<include name="**/*.php" />
				<exclude name="src/vendor/" />
				<exclude name="vendor/" />
				<exclude name="vendor/*" />
				<exclude name="data/generator/" />
				<modified />
			</fileset>


		</apply>
	</target>

	<target name="phploc" description="Measure project size using PHPLOC">
		<exec executable="phploc">
			<arg value="--exclude=" />
			<arg value="vendor" />
			<arg value="--exclude=" />
			<arg value="tests" />
			<arg value="--log-csv" />
			<arg value="${basedir}/build/logs/phploc.csv" />
			<arg path="${basedir}" />
		</exec>
	</target>

	<target name="pdepend" description="Calculate software metrics using PHP_Depend">
		<exec executable="pdepend">
			<arg value="--jdepend-xml=${basedir}/build/logs/jdepend.xml" />
			<arg value="--jdepend-chart=${basedir}/build/pdepend/dependencies.svg" />
			<arg value="--overview-pyramid=${basedir}/build/pdepend/overview-pyramid.svg" />
			<arg value="--ignore=${basedir}/scripts/,${basedir}/src/vendor/,${basedir}/src/data/" />
			<arg path="${basedir}" />
		</exec>
	</target>

	<target name="phpmd" description="Perform project mess detection using PHPMD and print human readable output. Intended for usage on the command line before committing.">
		<exec executable="phpmd">
			<arg path="${basedir}" />
			<arg value="text" />
			<arg value="${basedir}/build/phpmd.xml" />
			<arg value="--exclude=${basedir}/lib/vendor/,${basedir}/data/,${basedir}/scripts/" />
		</exec>
	</target>

	<target name="phpmd-ci" description="Perform project mess detection using PHPMD creating a log file for the continuous integration server">
		<exec executable="phpmd">
			<arg path="${basedir}" />
			<arg value="xml" />
			<arg value="${basedir}/build/phpmd.xml" />
			<arg value="--reportfile" />
			<arg value="${basedir}/build/logs/pmd.xml" />
			<arg value="--exclude" />
			<arg value="*scripts*,*vendor*,*tests*,*data*" />
		</exec>
	</target>

	<target name="package" description="Package with ZPK">
		<exec executable="zs-client.phar" failonerror="true">
			<arg value="packZpk" />
			<arg value="--folder=${basedir}" />
			<arg value="--destination=${basedir}" />
			<arg value="--name=application.zpk" />
		</exec>
	</target>


	<target name="phpcs" description="Find coding standard violations using PHP_CodeSniffer and print human readable output. Intended for usage on the command line before committing.">
		<exec executable="phpcs">
			<arg value="--standard=${basedir}/build/phpcs.xml" />
			<arg path="${basedir}" />
			<arg value="--ignore=${basedir}/tests" />
		</exec>
	</target>

	<target name="phpcs-ci" description="Find coding standard violations using PHP_CodeSniffer creating a log file for the continuous integration server">
		<exec executable="phpcs" output="/dev/null">
			<arg value="--extensions=php" />
			<arg value="-v" />
			<arg value="--report=checkstyle" />
			<arg value="--report-file=${basedir}/build/logs/checkstyle.xml" />
			<arg value="--standard=${basedir}/build/phpcs.xml" />
			<arg value="--ignore=${basedir}/src/vendor/,${basedir}/scripts/,${basedir}/src/tests/,${basedir}/src/data/" />
			<arg path="${basedir}" />
		</exec>
	</target>

	<target name="phpcpd" description="Find duplicate code using PHPCPD">
		<exec executable="phpcpd">
			<arg value="--exclude" />
			<arg value="scripts" />
			<arg value="--exclude" />
			<arg value="vendor" />
			<arg value="--exclude" />
			<arg value="tests" />
			<arg value="--log-pmd" />
			<arg value="${basedir}/build/logs/pmd-cpd.xml" />
			<arg path="${basedir}" />
		</exec>
	</target>

	<target name="phpdox" description="Generate API documentation using phpDox">
		<exec executable="phpdox">
			<arg line="--file ${basedir}/build/phpdox.xml" />
		</exec>
	</target>

	<target name="phpunit" description="Run unit tests with PHPUnit">
		<exec executable="phpunit" failonerror="true" />
	</target>

	<target name="deploy-dev" description="Deploy on ZendServer">
		<exec executable="zs-client.phar" failonerror="true">
			<arg value="installApp" />
			<arg value="--zpk=${basedir}/application.zpk" />
			<arg value="--target=cr4-ci" />
			<arg value="--baseUri='http://testme-backend-dev.4linux.com.br/'" />
			<arg value="--userAppName=testme-backend-dev" />
		</exec>
	</target>


	<target name="deploy-prod" description="Package with ZPK">
		<exec executable="zs-client.phar" failonerror="true">
			<arg value="installApp" />
			<arg value="--zpk=${basedir}/application.zpk" />
			<arg value="--target=aws-prod" />
			<arg value="--baseUri='http://api.rankdone.com/'" />
			<arg value="--userAppName=rankdone-backend" />
		</exec>
	</target>
	
	<target name="deploy-homolog" description="Package with ZPK">
			<exec executable="zs-client.phar" failonerror="true">
				<arg value="installApp" />
				<arg value="--zpk=${basedir}/application.zpk" />
				<arg value="--target=aws-homolog" />
				<arg value="--baseUri='http://api-homolog.rankdone.com/'" />
				<arg value="--userAppName=rankdone-backend-homolog" />
			</exec>
	</target>



	<target name="phpcb" description="Aggregate tool output with PHP_CodeBrowser">
		<exec executable="phpcb">
			<arg value="--log" />
			<arg path="${basedir}/build/logs" />
			<arg value="--source" />
			<arg path="${basedir}" />
			<arg value="--output" />
			<arg path="${basedir}/build/code-browser" />
			<arg value="--exclude=" />
			<arg value="*/vendor/*" />
			<arg value="--exclude=" />
			<arg value="*/tests/*" />
			<arg value="--exclude=" />
			<arg value="*/build/*" />
		</exec>
	</target>

	<target name="composer">
		<exec executable="php" failonerror="true">
			<arg line="composer.phar install  --working-dir=${basedir}/src" />
		</exec>
	</target>

	<target name="codeception">
		<exec executable="codecept.phar" failonerror="true">
			<arg line=" run  --config=src/codeception.yml --env dev --steps --xml --html" />
		</exec>
	</target>
	
	<target name="codeception-homolog">
			<exec executable="php" failonerror="true">
				<arg line="codecept.phar run --env homolog --steps --xml --html" />
			</exec>
	</target>

</project>